{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/init.js","../src/index.js"],"sourcesContent":["// 重写数组中的七个方法\r\n\r\nlet oldArrayProto = Array.prototype // 获取数组的原型\r\n\r\n// 创建一个以Array.prototype 为原型的 对象\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\nlet methods = [\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n]\r\n\r\n// 重写方法\r\nmethods.forEach(method => {\r\n    // 更改新的arr原型方法，但是执行旧的方法\r\n    newArrayProto[method] = function (...args) {\r\n        const res = oldArrayProto[method].call(this, ...args) // 内部调用原来的方法，函数的劫持，切片编程\r\n        // 拿到Observe的this\r\n        let ob = this.__ob__  \r\n        // 我们需要对新增的数据再次进行劫持\r\n        let inserted\r\n        switch (method) {\r\n            case 'push':\r\n            case 'push':\r\n                inserted = args\r\n                break;\r\n            case 'splice':\r\n                inserted = args.slice(2)\r\n            default:\r\n                break;\r\n        }\r\n        // 如果inserted存在 对新增的内容再次进行检测\r\n        if (inserted) {\r\n            ob.obseverArray(inserted)\r\n        }\r\n        return res\r\n    }\r\n})","\r\nimport { newArrayProto } from \"./array.js\"\r\n// 检测类\r\nclass Obsever {\r\n    constructor(data) {\r\n        // 给数据添加标识 就是给每个data都添加个__ob__属性，如果有这个属性就说明已经每监测了\r\n        Object.defineProperty(data,'__ob__', {\r\n            value:this, // 这样就可以调用Observer的方法\r\n            enumerable:false // 将__ob__变成不可枚举的的属性，如果不添加这个属性就会一直循环递归\r\n        })\r\n        // object.defineProperty只能劫持已经存在的属性（vue里面会维持单独写一些api, $set $delete）\r\n        if (Array.isArray(data)) {\r\n            // 重写方法 七个变异方法\r\n            data.__proto__ = newArrayProto\r\n            this.obseverArray(data) // 数组中的对象时刻以监控到数据的变化\r\n        } else {\r\n            this.walk(data)\r\n        }\r\n    }\r\n    walk(data) {\r\n        // 循环对象对属性依次劫持\r\n        // \"重新定义\" 属性\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n    }\r\n    // 数组单独进行检测\r\n    obseverArray(data) {\r\n        data.forEach(item => obsever(item))\r\n    }\r\n}\r\n\r\n\r\n// 数据劫持\r\nexport const obsever = function (data) {\r\n    // 对这个对象进行劫持\r\n\r\n    // 只能对象进行劫持\r\n    if (typeof data !== \"object\" || data === null) return\r\n    // 说明已经被代理过了\r\n    if( data.__ob__ instanceof Obsever) return data.__ob__\r\n    return new Obsever(data)\r\n}\r\n\r\n// taget是对象和 key是属性明 value是属性值\r\nexport function defineReactive(target, key, value) { // value是一个闭包\r\n    // 属性值是对象或者数组也要进行劫持\r\n    obsever(value) // 对所有的对象都进行属性劫持 进行递归\r\n    Object.defineProperty(target, key, {\r\n        // 取值的时候\r\n        get() {\r\n            console.log('我取值了')\r\n            return value\r\n        },\r\n        // 设置值的时候\r\n        set(newValue) {\r\n            console.log(`我被设置了${newValue}`)\r\n            if (newValue === value) return\r\n            value = newValue\r\n            obsever(newValue) // 设置完后也要立即进行检测\r\n        }\r\n    })\r\n}","import { obsever } from \"./observe/index.js\"\r\n\r\n// 挂载_init方法 \r\nexport function initMixin(Vue) { // 将vue作为参数传进来\r\n    // 初始化options\r\n    Vue.prototype._init = function(options){\r\n        const vm = this\r\n        // 建立$options\r\n        vm.$optins = options // vm.$options 获取用户配置\r\n        // 初始化状态（包括data,props,watch，......）\r\n       initState(vm) \r\n    }\r\n}\r\n// 总方法\r\nfunction initState(vm) {\r\n    const opts = vm.$optins // 获取所有选项\r\n    // 初始化data\r\n    if (opts.data) {\r\n        initData(vm)\r\n    }\r\n}\r\n// 初始化data\r\nfunction initData(vm) {\r\n    let data = vm.$optins.data // data可能是函数和对象\r\n    // 如果是函数就执行拿到数据 不是就直接拿到\r\n    data = typeof data === \"function\"? data.call(this) : data\r\n    console.log(data)\r\n    // 进行数据劫持 vue2中使用obj.defineproperty\r\n    obsever(data)\r\n    // 赋值给_data\r\n    vm._data = data\r\n    // 将vm._data进行二次代理\r\n    for (let key in data) {\r\n        proxy(vm, '_data',key)\r\n    }\r\n}\r\n\r\n// 将_data的东西代理到vm实例上 啥意思呢 就是 之前是通过vm._data.name获取name,现在是可以通过vm.data获取\r\nfunction proxy(vm,targert,key) {\r\n    // 重新定义vm的属性\r\n    Object.defineProperty(vm,key,{\r\n        get() {\r\n            return vm[targert][key]\r\n        },\r\n        set(newValue) {\r\n            vm[targert][key] = newValue\r\n        }\r\n    })\r\n}","import { initMixin } from \"./init\"\r\n// 构造方法进行定义vue类会更好\r\nfunction Vue(options) { // options就是用户的选项\r\n    // 初始化配置项\r\n    this._init(options)\r\n}\r\n\r\n// 将_init方法进行配置到Vue原型上\r\ninitMixin(Vue)\r\n\r\nexport default Vue"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","_oldArrayProto$method","_len","arguments","length","args","_key","res","call","apply","concat","ob","__ob__","inserted","slice","obseverArray","Obsever","data","_classCallCheck","defineProperty","value","enumerable","isArray","__proto__","walk","_createClass","key","keys","defineReactive","item","obsever","_typeof","target","get","console","log","set","newValue","initMixin","Vue","_init","options","vm","$optins","initState","opts","initData","_data","proxy","targert"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;;EAEA,IAAIA,aAAa,GAAGC,KAAK,CAACC,SAAS,CAAC;;EAEpC;EACO,IAAIC,aAAa,GAAGC,MAAM,CAACC,MAAM,CAACL,aAAa,CAAC,CAAA;EACvD,IAAIM,OAAO,GAAG,CACV,MAAM,EACN,KAAK,EACL,OAAO,EACP,SAAS,EACT,SAAS,EACT,MAAM,EACN,QAAQ,CACX,CAAA;;EAED;EACAA,OAAO,CAACC,OAAO,CAAC,UAAAC,MAAM,EAAI;EACtB;EACAL,EAAAA,aAAa,CAACK,MAAM,CAAC,GAAG,YAAmB;EAAA,IAAA,IAAAC,qBAAA,CAAA;EAAA,IAAA,KAAA,IAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAANC,IAAI,GAAAZ,IAAAA,KAAA,CAAAS,IAAA,GAAAI,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA,EAAA,EAAA;EAAJD,MAAAA,IAAI,CAAAC,IAAA,CAAAH,GAAAA,SAAA,CAAAG,IAAA,CAAA,CAAA;EAAA,KAAA;MACrC,IAAMC,GAAG,GAAG,CAAAN,qBAAA,GAAAT,aAAa,CAACQ,MAAM,CAAC,EAACQ,IAAI,CAAAC,KAAA,CAAAR,qBAAA,EAAC,CAAA,IAAI,EAAAS,MAAA,CAAKL,IAAI,CAAA,CAAC,CAAC;EACtD;EACA,IAAA,IAAIM,EAAE,GAAG,IAAI,CAACC,MAAM,CAAA;EACpB;EACA,IAAA,IAAIC,QAAQ,CAAA;EACZ,IAAA,QAAQb,MAAM;EACV,MAAA,KAAK,MAAM,CAAA;EACX,MAAA,KAAK,MAAM;EACPa,QAAAA,QAAQ,GAAGR,IAAI,CAAA;EACf,QAAA,MAAA;EACJ,MAAA,KAAK,QAAQ;EACTQ,QAAAA,QAAQ,GAAGR,IAAI,CAACS,KAAK,CAAC,CAAC,CAAC,CAAA;EAGhC,KAAA;EACA;EACA,IAAA,IAAID,QAAQ,EAAE;EACVF,MAAAA,EAAE,CAACI,YAAY,CAACF,QAAQ,CAAC,CAAA;EAC7B,KAAA;EACA,IAAA,OAAON,GAAG,CAAA;KACb,CAAA;EACL,CAAC,CAAC;;ECvCF;EAAA,IACMS,OAAO,gBAAA,YAAA;IACT,SAAAA,OAAAA,CAAYC,IAAI,EAAE;EAAAC,IAAAA,eAAA,OAAAF,OAAA,CAAA,CAAA;EACd;EACApB,IAAAA,MAAM,CAACuB,cAAc,CAACF,IAAI,EAAC,QAAQ,EAAE;EACjCG,MAAAA,KAAK,EAAC,IAAI;EAAE;QACZC,UAAU,EAAC,KAAK;EACpB,KAAC,CAAC,CAAA;EACF;EACA,IAAA,IAAI5B,KAAK,CAAC6B,OAAO,CAACL,IAAI,CAAC,EAAE;EACrB;QACAA,IAAI,CAACM,SAAS,GAAG5B,aAAa,CAAA;EAC9B,MAAA,IAAI,CAACoB,YAAY,CAACE,IAAI,CAAC,CAAC;EAC5B,KAAC,MAAM;EACH,MAAA,IAAI,CAACO,IAAI,CAACP,IAAI,CAAC,CAAA;EACnB,KAAA;EACJ,GAAA;EAACQ,EAAAA,YAAA,CAAAT,OAAA,EAAA,CAAA;MAAAU,GAAA,EAAA,MAAA;EAAAN,IAAAA,KAAA,EACD,SAAAI,IAAKP,CAAAA,IAAI,EAAE;EACP;EACA;QACArB,MAAM,CAAC+B,IAAI,CAACV,IAAI,CAAC,CAAClB,OAAO,CAAC,UAAA2B,GAAG,EAAA;UAAA,OAAIE,cAAc,CAACX,IAAI,EAAES,GAAG,EAAET,IAAI,CAACS,GAAG,CAAC,CAAC,CAAA;SAAC,CAAA,CAAA;EAC1E,KAAA;EACA;EAAA,GAAA,EAAA;MAAAA,GAAA,EAAA,cAAA;EAAAN,IAAAA,KAAA,EACA,SAAAL,YAAaE,CAAAA,IAAI,EAAE;EACfA,MAAAA,IAAI,CAAClB,OAAO,CAAC,UAAA8B,IAAI,EAAA;UAAA,OAAIC,OAAO,CAACD,IAAI,CAAC,CAAA;SAAC,CAAA,CAAA;EACvC,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAAb,OAAA,CAAA;EAAA,CAIL,EAAA,CAAA;EACO,IAAMc,OAAO,GAAG,SAAVA,OAAOA,CAAab,IAAI,EAAE;EACnC;;EAEA;IACA,IAAIc,OAAA,CAAOd,IAAI,CAAA,KAAK,QAAQ,IAAIA,IAAI,KAAK,IAAI,EAAE,OAAA;EAC/C;IACA,IAAIA,IAAI,CAACL,MAAM,YAAYI,OAAO,EAAE,OAAOC,IAAI,CAACL,MAAM,CAAA;EACtD,EAAA,OAAO,IAAII,OAAO,CAACC,IAAI,CAAC,CAAA;EAC5B,CAAC,CAAA;;EAED;EACO,SAASW,cAAcA,CAACI,MAAM,EAAEN,GAAG,EAAEN,KAAK,EAAE;EAAE;EACjD;IACAU,OAAO,CAACV,KAAK,CAAC,CAAC;EACfxB,EAAAA,MAAM,CAACuB,cAAc,CAACa,MAAM,EAAEN,GAAG,EAAE;EAC/B;MACAO,GAAG,EAAA,SAAAA,MAAG;EACFC,MAAAA,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC,CAAA;EACnB,MAAA,OAAOf,KAAK,CAAA;OACf;EACD;MACAgB,GAAG,EAAA,SAAAA,GAACC,CAAAA,QAAQ,EAAE;EACVH,MAAAA,OAAO,CAACC,GAAG,CAAA,gCAAA,CAAAzB,MAAA,CAAS2B,QAAQ,CAAE,CAAC,CAAA;QAC/B,IAAIA,QAAQ,KAAKjB,KAAK,EAAE,OAAA;EACxBA,MAAAA,KAAK,GAAGiB,QAAQ,CAAA;QAChBP,OAAO,CAACO,QAAQ,CAAC,CAAC;EACtB,KAAA;EACJ,GAAC,CAAC,CAAA;EACN;;EC1DA;EACO,SAASC,SAASA,CAACC,GAAG,EAAE;EAAE;EAC7B;EACAA,EAAAA,GAAG,CAAC7C,SAAS,CAAC8C,KAAK,GAAG,UAASC,OAAO,EAAC;MACnC,IAAMC,EAAE,GAAG,IAAI,CAAA;EACf;EACAA,IAAAA,EAAE,CAACC,OAAO,GAAGF,OAAO,CAAC;EACrB;MACDG,SAAS,CAACF,EAAE,CAAC,CAAA;KACf,CAAA;EACL,CAAA;EACA;EACA,SAASE,SAASA,CAACF,EAAE,EAAE;EACnB,EAAA,IAAMG,IAAI,GAAGH,EAAE,CAACC,OAAO,CAAC;EACxB;IACA,IAAIE,IAAI,CAAC5B,IAAI,EAAE;MACX6B,QAAQ,CAACJ,EAAE,CAAC,CAAA;EAChB,GAAA;EACJ,CAAA;EACA;EACA,SAASI,QAAQA,CAACJ,EAAE,EAAE;EAClB,EAAA,IAAIzB,IAAI,GAAGyB,EAAE,CAACC,OAAO,CAAC1B,IAAI,CAAC;EAC3B;EACAA,EAAAA,IAAI,GAAG,OAAOA,IAAI,KAAK,UAAU,GAAEA,IAAI,CAACT,IAAI,CAAC,IAAI,CAAC,GAAGS,IAAI,CAAA;EACzDiB,EAAAA,OAAO,CAACC,GAAG,CAAClB,IAAI,CAAC,CAAA;EACjB;IACAa,OAAO,CAACb,IAAI,CAAC,CAAA;EACb;IACAyB,EAAE,CAACK,KAAK,GAAG9B,IAAI,CAAA;EACf;EACA,EAAA,KAAK,IAAIS,GAAG,IAAIT,IAAI,EAAE;EAClB+B,IAAAA,KAAK,CAACN,EAAE,EAAE,OAAO,EAAChB,GAAG,CAAC,CAAA;EAC1B,GAAA;EACJ,CAAA;;EAEA;EACA,SAASsB,KAAKA,CAACN,EAAE,EAACO,OAAO,EAACvB,GAAG,EAAE;EAC3B;EACA9B,EAAAA,MAAM,CAACuB,cAAc,CAACuB,EAAE,EAAChB,GAAG,EAAC;MACzBO,GAAG,EAAA,SAAAA,MAAG;EACF,MAAA,OAAOS,EAAE,CAACO,OAAO,CAAC,CAACvB,GAAG,CAAC,CAAA;OAC1B;MACDU,GAAG,EAAA,SAAAA,GAACC,CAAAA,QAAQ,EAAE;EACVK,MAAAA,EAAE,CAACO,OAAO,CAAC,CAACvB,GAAG,CAAC,GAAGW,QAAQ,CAAA;EAC/B,KAAA;EACJ,GAAC,CAAC,CAAA;EACN;;EC/CA;EACA,SAASE,GAAGA,CAACE,OAAO,EAAE;EAAE;EACpB;EACA,EAAA,IAAI,CAACD,KAAK,CAACC,OAAO,CAAC,CAAA;EACvB,CAAA;;EAEA;EACAH,SAAS,CAACC,GAAG,CAAC;;;;;;;;"}